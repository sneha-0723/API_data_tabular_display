[{"C:\\Users\\SNEHA\\API_data_tabular_display\\src\\index.js":"1","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\reportWebVitals.js":"2","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\App.js":"3","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\history.js":"4","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\navbar.js":"5","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\payload.js":"6"},{"size":517,"mtime":1646642000850,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1646642000853,"results":"9","hashOfConfig":"8"},{"size":603,"mtime":1646642000846,"results":"10","hashOfConfig":"8"},{"size":6497,"mtime":1646642000848,"results":"11","hashOfConfig":"8"},{"size":1638,"mtime":1646642000852,"results":"12","hashOfConfig":"8"},{"size":6552,"mtime":1646642000853,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1di0v6x",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\SNEHA\\API_data_tabular_display\\src\\index.js",[],"C:\\Users\\SNEHA\\API_data_tabular_display\\src\\reportWebVitals.js",[],"C:\\Users\\SNEHA\\API_data_tabular_display\\src\\App.js",["29"],"import React, { Component } from \"react\";\r\nimport History from \"./history\";\r\nimport Payload from \"./payload\";\r\nimport Navbar from \"./navbar\";\r\n\r\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n        <Router>\r\n         <Navbar/>\r\n        <Switch>\r\n          <Route path=\"/payload\">\r\n            <Payload />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <History />\r\n          </Route>\r\n        </Switch>\r\n      \r\n        </Router>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\history.js",["30","31","32","33","34","35","36"],"import \"./App.css\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(3),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(2),\r\n    color: \"white\",\r\n  },\r\n});\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    backgroundColor: \"white\",\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction History() {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, settitle] = React.useState(\"NIL\");\r\n  const [reddit, setreddit] = React.useState(\"NIL\");\r\n  const [article, setarticle] = React.useState(\"NIL\");\r\n  const [wikipedia, setwike] = React.useState(\"NIL\");\r\n  const [date, setdate] = React.useState(\"NIL\");\r\n  const [flight, setflight] = React.useState(\"NIL\");\r\n\r\n  const handleClickOpen = (e, data) => {\r\n    setOpen(true);\r\n    handlen(data);\r\n    console.log(data.flight_number);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handlen = (data) => {\r\n    settitle(data.title);\r\n    setarticle(data.links.article);\r\n    setreddit(data.links.reddit);\r\n    setwike(data.links.wikipedia);\r\n    setdate(data.event_date_utc);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: \"id\",\r\n      align: \"center\",\r\n      filterPlaceholder: \"filter-by-id\",\r\n      sorting: false,\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"TITLE\",\r\n      field: \"title\",\r\n      align: \"center\",\r\n      filterPlaceholder: \"filter by news\",\r\n      sorting: false,\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"EVENT DATE\",\r\n      field: \"event_date_utc\",\r\n      filterPlaceholder: \"date-picker\",\r\n      align: \"center\",\r\n      type: \"date\",\r\n      defaultSort: \"desc\",\r\n      dateSetting: { locale: \"en-GB\" },\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"EVENT DATE(unix)\",\r\n      field: \"event_date_unix\",\r\n      align: \"center\",\r\n      filtering: false,\r\n      export:false,\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"FLIGHT NUMBER\",\r\n      field: \"flight_number\",\r\n      filterPlaceholder: \"filter by flight_no\",\r\n      align: \"center\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    fetch(\"https://api.spacexdata.com/v3/history\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        setData(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 align=\"center\">SPACE-X DETAILS</h1>\r\n      <h4 align=\"center\" style={{color:\"blue\", fontSize:\"20px\"}}>HISTORY DATA</h4>\r\n      <hr></hr>\r\n      <MaterialTable\r\n        options={{\r\n          searchFieldVariant: \"outlined\",\r\n          searchFieldAlignment: \"right\",\r\n          searchAutoFocus: true,\r\n          paging: true,\r\n          pageSizeOptions: [3, 5, 10, 20, 50, 100],\r\n          paginationType: \"stepped\",\r\n          paginationPosition: \"top\",\r\n          filtering: true,\r\n          exportButton:true,\r\n          exportAllData:true,\r\n          rowStyle: (data, index) =>\r\n            index % 2 == 0\r\n              ? { background: \"#e6e6fa\" }\r\n              : { background: \"#cbc3e3\" },\r\n          headerStyle: {\r\n            background: \"#e0b0ff\",\r\n            fontWeight: \"bold\",\r\n            fontStyle: \"italics\",\r\n          },\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: () => (\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                ARTICLES\r\n              </Button>\r\n            ),\r\n\r\n            onClick: (e, data) => {\r\n              handleClickOpen(e, data);\r\n            },\r\n          },\r\n        ]}\r\n        title=\"Space-x HISTORY\"\r\n        data={data}\r\n        columns={columns}\r\n        \r\n      />\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle\r\n          onClose={handleClose}\r\n          style={{\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            backgroundColor: \"black\",\r\n          }}\r\n        >\r\n          DETAILS\r\n        </DialogTitle>\r\n        <DialogContent   dividers>\r\n          <Typography gutterBottom>\r\n            <b>TITLE: </b>: {title}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>EVENT DATE: </b>\r\n            <a type=\"date\">{date}</a>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>ARTICLE: </b>{\" \"}\r\n            <a href={article} target=\"_blank\">\r\n              Check out article\r\n            </a>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>REDDIT: </b>{\" \"}\r\n            <a href={reddit} target=\"_blank\">\r\n              Reddit\r\n            </a>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>WIKEPEDIA: </b>\r\n            <a href={wikipedia} target=\"_blank\">\r\n              Wikepedia\r\n            </a>\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"black\", color: \"white\" }}>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            style={{ color: \"white\", backgroundColor: \"blue\" }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","C:\\Users\\SNEHA\\API_data_tabular_display\\src\\navbar.js",[],"C:\\Users\\SNEHA\\API_data_tabular_display\\src\\payload.js",["37"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(3),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(2),\r\n    color: \"white\"\r\n  },\r\n});\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    width: 300,\r\n    backgroundColor: \"white\",\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Payload() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: `tableData.id`,\r\n      align: \"center\",\r\n      filterPlaceholder: \"Filter by id\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"PAYLOAD_ID\",\r\n      field: \"payload_id\",\r\n      filterPlaceholder: \"Payload ID\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"MANUFACTURER\",\r\n      field: \"manufacturer\",\r\n      filterPlaceholder: \"Manufacturer\",\r\n      align: \"center\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n    {\r\n      title: \"NATIONALITY\",\r\n      field: \"nationality\",\r\n      filterPlaceholder: \"Nationality\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n\r\n    { title: \"ORBIT\", filterPlaceholder: \"Orbit\", field: \"orbit\", emptyValue: () => <em>NULL</em> },\r\n    {\r\n      title: \"PAYLOAD_TYPE\",\r\n      field: \"payload_type\",\r\n      filterPlaceholder: \"Payload Type\",\r\n      emptyValue: () => <em>NULL</em>,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    fetch(\"https://api.spacexdata.com/v3/payloads\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setData(res);\r\n      });\r\n  }, []);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [n, setn] = React.useState(\"NIL\");\r\n  const [orbit, setorbit] = React.useState(\"NIL\");\r\n  const [customers, setcustomer] = React.useState(\"NIL\");\r\n  const [ref_sys, setrefsys] = React.useState(\"NIL\");\r\n  const [regime, setregime] = React.useState(\"NIL\");\r\n  const [payload, setpayload] = React.useState(\"NIL\");\r\n  const [man, setman] = React.useState(\"NIL\");\r\n\r\n  const handleClickOpen = (e, data) => {\r\n    setOpen(true);\r\n    handlen(data);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handlen = (data) => {\r\n      setn(data.nationality);\r\n\r\n\r\n  \r\n\r\n    setorbit(data.orbit);\r\n\r\n    setcustomer(data.customers[0]);\r\n    setrefsys(data.orbit_params.reference_system);\r\n    setregime(data.orbit_params.regime);\r\n    setpayload(data.payload_id);\r\n    setman(data.manufacturer);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h1 align=\"center\" >SPACE-X DETAILS</h1>\r\n      <h4 align=\"center\" style={{color:\"blue\", fontSize:\"20px\"}} >PAYLOAD DATA</h4>\r\n    \r\n      \r\n      <hr></hr>\r\n     \r\n      <MaterialTable\r\n        title=\"Space-x Payload\"\r\n        actions={[\r\n          {\r\n            icon: () => (\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                DETAILS\r\n              </Button>\r\n            ),\r\n            tooltip: \"View more\",\r\n            onClick: (e, data) => {\r\n              handleClickOpen(e, data);\r\n              console.log(n);\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          searchFieldVariant: \"outlined\",\r\n          searchFieldAlignment: \"right\",\r\n          searchAutoFocus: true,\r\n          filtering: true,\r\n          exportButton:true,\r\n          exportAllData:true,\r\n          paging:true,\r\n           \r\n            paginationType:\"stepped\",\r\n            paginationPosition:\"top\",\r\n            pageSizeOptions:[3,5,10,20,50,100],\r\n          \r\n        \r\n          \r\n          rowStyle: (data, index) =>\r\n            index % 2 == 0\r\n              ? { background: \"#e6e6fa\" }\r\n              : { background: \"#cbc3e3\" },\r\n          headerStyle: {\r\n            background: \"#e0b0ff\",\r\n            fontWeight: \"bold\",\r\n            fontStyle: \"italics\",\r\n          },\r\n        }}\r\n        data={data}\r\n        columns={columns}\r\n      />\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle\r\n          onClose={handleClose}\r\n          style={{\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            backgroundColor: \"black\",\r\n          }}\r\n        >\r\n          DETAILS\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            <b>Payload ID: </b>: {payload}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Manufacturer: </b>{man}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Nationality: </b> {n}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Orbit: </b>\r\n            {orbit}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Customers:</b> {customers}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Refernce System:</b> {ref_sys}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <b>Regime:</b> {regime}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"black\", color: \"white\" }}>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            style={{ color: \"white\", backgroundColor: \"blue\" }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payload;\r\n",{"ruleId":"38","severity":1,"message":"39","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":14},{"ruleId":"38","severity":1,"message":"42","line":61,"column":10,"nodeType":"40","messageId":"41","endLine":61,"endColumn":16},{"ruleId":"38","severity":1,"message":"43","line":61,"column":18,"nodeType":"40","messageId":"41","endLine":61,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":150,"column":23,"nodeType":"46","messageId":"47","endLine":150,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":194,"column":13,"nodeType":"50","endLine":194,"endColumn":28},{"ruleId":"51","severity":1,"message":"52","line":198,"column":13,"nodeType":"50","messageId":"53","endLine":198,"endColumn":47,"fix":"54"},{"ruleId":"51","severity":1,"message":"52","line":204,"column":13,"nodeType":"50","messageId":"53","endLine":204,"endColumn":46,"fix":"55"},{"ruleId":"51","severity":1,"message":"52","line":210,"column":13,"nodeType":"50","messageId":"53","endLine":210,"endColumn":49,"fix":"56"},{"ruleId":"44","severity":1,"message":"45","line":173,"column":23,"nodeType":"46","messageId":"47","endLine":173,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'flight' is assigned a value but never used.","'setflight' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"57","text":"58"},{"range":"59","text":"58"},{"range":"60","text":"58"},[5661,5661]," rel=\"noreferrer\"",[5855,5855],[6039,6039]]